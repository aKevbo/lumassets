"use strict";SharkGame.EventHandler={eventQueue:[],init(){SharkGame.EventHandler.eventQueue=[];const e=SharkGame.EventHandler.eventQueue;_.each(SharkGame.Events,(r=>{e[r.priority]?e[r.priority].push(r):e[r.priority]=[r]}))},setup(){SharkGame.EventHandler.handleEventTick("load")},handleEventTick(e){if(!e)return void log.addError("tried to call handleEventTick without passing handlingTime");const r=SharkGame.EventHandler.eventQueue;r.forEach(((t,a)=>{const n=[];_.each(t,(r=>{let t=!0;if(r.handlingTime===e||"load"===e){switch(r.getAction()){case"trigger":t=r.trigger();break;case"remove":t=!1;break;case"pass":break;default:log.addError(new Error("eventHandler.getAction() returned unexpected result"))}}t&&n.push(r)})),r[a]=n}))}};