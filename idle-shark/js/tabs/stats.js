"use strict";SharkGame.Stats={tabId:"stats",tabDiscovered:!1,tabSeen:!1,tabName:"Grotto",tabBg:"img/bg/bg-grotto.png",sceneImage:"img/events/misc/scene-grotto.png",recreateIncomeTable:null,incomeTableEmpty:!0,discoverReq:{upgrade:["statsDiscovery"]},bannedDisposeCategories:["special","harmful","hidden"],message:"The grotto is a place to keep a better track of resources.</br></br>You can also dispose of those you don't need anymore.</br>Disposing specialists returns them to their normal, previous lives.",init(){SharkGame.TabHandler.registerTab(this)},setup(){stats.recreateIncomeTable=!0},switchTo(){const e=$("#content");e.append($("<div>").attr("id","tabMessage"));const t=$("<div>").attr("id","statsContainer");e.append(t),t.append($("<div>").attr("id","statsUpperContainer").append($("<div>").attr("id","incomeData"))),t.append($("<div>").attr("id","statsLeftContainer").append($("<div>").attr("id","disposeResource"))),t.append($("<div>").attr("id","statsRightContainer").append($("<div>").attr("id","generalStats"))),t.append($("<div>").addClass("clear-fix"));let a=stats.message;const r=$("#tabMessage");SharkGame.Settings.current.showTabImages&&(a="<img width=400 height=200 src='"+stats.sceneImage+"' id='tabSceneImage'>"+a,r.css("background-image","url('"+stats.tabBg+"')")),r.html(a);const s=$("#disposeResource");s.append($("<h3>").html("Dispose of Stuff")),main.createBuyButtons("rid",s,"append"),stats.createDisposeButtons();const o=stats.createIncomeTable(),n=$("#incomeData");n.append($("<h3>").html("Income Details")),n.append($("<p>").html("(Listed below are resources, the income each resource gives you, and the total income you're getting from each thing.)").addClass("medDesc"));const l=$("<div>");l.css({margin:"auto","margin-bottom":"15px",clear:"both"}),SharkGame.Button.makeButton("switchButton","Swap Producers and Produced",l,stats.toggleSwitch).addClass("min-block"),"simple"===SharkGame.Settings.current.grottoMode?SharkGame.Button.makeButton("modeButton","Swap to Advanced mode",l,stats.toggleMode).addClass("min-block"):SharkGame.Button.makeButton("modeButton","Swap to Simple mode",l,stats.toggleMode).addClass("min-block"),n.append(l),n.append(o),n.append($("<div>").attr("id","tableKey")),stats.updateTableKey();const i=$("#generalStats");i.append($("<h3>").html("General Stats"));const c=main.isFirstTime();i.append($("<p>").html("Real time since you began your journey:<br/><span id='gameTime' class='timeDisplay'></span>").addClass("medDesc")),c||(i.append($("<p>").html("Relative time since you came through the gate:<br/><span id='runTime' class='timeDisplay'></span>").addClass("medDesc")),!1===SharkGame.persistentFlags.scouting&&i.append($("<p>").html(`Par: ${gateway.getPar()} minutes`).addClass("medDesc"))),i.append($("<h3>").html("Total Ocean Resources Acquired")),c||i.append($("<p>").html("Essence given is the total acquired for the entire game and not just for this world.").addClass("medDesc")),i.append(stats.createTotalAmountTable()),this.update()},update(){stats.updateDisposeButtons(),stats.updateIncomeTable(),stats.updateTotalAmountTable(),stats.recreateIncomeTable&&(stats.createIncomeTable(),stats.createTotalAmountTable(),stats.recreateIncomeTable=!1),stats.updateTimers(),document.getElementById("tooltipbox").attributes.current&&stats.networkTextEnter(null,document.getElementById("tooltipbox").attributes.current.value)},createDisposeButtons(){const e=$("#disposeResource").addClass("disposeArrangement");SharkGame.ResourceMap.forEach(((t,a)=>{res.getTotalResource(a)>0&&-1===stats.bannedDisposeCategories.indexOf(res.getCategoryOfResource(a))&&SharkGame.Button.makeButton("dispose-"+a,"Dispose of<br/>"+sharktext.getResourceName(a,!1,!1,sharkcolor.getElementColor("tooltipbox","background-color")),e,stats.onDispose)}))},updateDisposeButtons(){SharkGame.ResourceMap.forEach(((e,t)=>{if(res.getTotalResource(t)>0&&-1===stats.bannedDisposeCategories.indexOf(res.getCategoryOfResource(t))){const e=$("#dispose-"+t),a=res.getResource(t);let r=sharkmath.getBuyAmount();if(r<0){const e=a,t=-1*Math.floor(r);r=Math.floor(e/t)}const s=a<r||r<=0;let o="Dispose of "+sharktext.beautify(r)+"<br/>"+sharktext.getResourceName(t,s,r,sharkcolor.getElementColor("dispose-"+t,"background-color"));r<=0&&(o="Can't dispose any more "+sharktext.getResourceName(t,s,r,sharkcolor.getElementColor("dispose-"+t,"background-color"))),e.html()!==o.replace(/'/g,'"').replace("<br/>","<br>")&&e.html(o),s?e.addClass("disabled"):e.removeClass("disabled")}}))},onDispose(){const e=$(this).attr("id").split("-")[1],t=res.getResource(e);let a=SharkGame.Settings.current.buyAmount;if(a<0){a=t/(-1*Math.floor(a))}if(t>=a){res.changeResource(e,-a);const t=SharkGame.ResourceCategories[res.getCategoryOfResource(e)],r=res.getBaseOfResource(e);r&&res.changeResource(r,a),log.addMessage(SharkGame.choose(t.disposeMessage))}else log.addMessage("Can't dispose that much! You don't have enough of it.")},updateTimers(){const e=sharktext.formatTime(_.now()-SharkGame.timestampGameStart);$("#gameTime").html()!==e&&$("#gameTime").html(e);const t=sharktext.formatTime(sharktime.getRunTime());$("#runTime").html()!==t&&$("#runTime").html(t)},updateIncomeTable(){SharkGame.ResourceMap.forEach(((e,t)=>{if(res.getTotalResource(t)>0&&SharkGame.ResourceMap.get(t).income){const e=SharkGame.ResourceMap.get(t).income;$.each(e,((e,a)=>{let r,s=$("#income-"+t+"-"+e);if(!SharkGame.BreakdownIncomeTable.get(t))return!0;r=SharkGame.BreakdownIncomeTable.get(t)[e];const o=r<0?"":"+";let n="<span style='color: "+res.TOTAL_INCOME_COLOR+"'>"+(o+sharktext.beautifyIncome(r)).bold()+"</span>";s.html()!==n.replace(/'/g,'"')&&s.html(n),s=SharkGame.Settings.current.switchStats?$("#table-amount-"+t+"-"+e):$("#table-amount-"+t),n=sharktext.shouldHideNumberOfThis(t)?"":"<div style='text-align:right'>"+sharktext.beautify(res.getResource(t)).bold()+"</div>",s.html()!==n.replace(/'/g,'"')&&s.html(n),"advanced"===SharkGame.Settings.current.grottoMode?(s=$("#network-"+t+"-"+e).on("mouseenter",stats.networkTextEnter).on("mouseleave",stats.networkTextLeave),n="<span style='color:"+res.RESOURCE_AFFECT_MULTIPLIER_COLOR+"'>x"+sharktext.beautify(res.getNetworkIncomeModifier("generator",t)*res.getNetworkIncomeModifier("resource",e),!1,2)+"</span>",s.html()!==n.replace(/'/g,'"')&&s.html(n)):(s=$("#base-income-"+t+"-"+e),n="<span style='color:"+res.INCOME_COLOR+"'>"+(SharkGame.BreakdownIncomeTable.get(t)[e]<0?"":"+")+sharktext.beautify(a*res.getNetworkIncomeModifier("generator",t)*res.getNetworkIncomeModifier("resource",e)/SharkGame.persistentFlags.dialSetting,!1,2)+"/s</span>",s.html()!==n.replace(/'/g,'"')&&s.html(n))}))}}))},updateTotalAmountTable(){SharkGame.ResourceMap.forEach(((e,t)=>{const a=res.getTotalResource(t);if(a>0&&"hidden"!==res.getCategoryOfResource(t)){const e=$("#totalAmount-"+t),r=sharktext.beautify(a);e.html()!==r.replace(/'/g,'"')&&e.html(r)}}))},createIncomeTable(){let e=$("#incomeTable");0===e.length?e=$("<table>").attr("id","incomeTable"):e.empty();let t=1;const a=new Map;if(SharkGame.ResourceMap.forEach(((e,t)=>{if(res.getTotalResource(t)>0&&e.income){for(const t in e.income)if(SharkGame.PlayerResources.get(t)<e.income[t]&&!e.forceIncome)return;$.each(e.income,((e,r)=>{world.doesResourceExist(e)&&SharkGame.FlippedBreakdownIncomeTable.get(e)&&0!==r&&(SharkGame.Settings.current.switchStats?(a.has(e)||a.set(e,{}),a.get(e)[t]=r):(a.has(t)||a.set(t,{}),a.get(t)[e]=r))}))}})),a.forEach(((a,r)=>{const s=Object.keys(a).length;let o=$("<tr>"),n=0;const l=t%2==0?"evenRow":"oddRow";function i(e,t,a){a?a.includes("network")?o.append($("<td>").attr("rowspan","inline"===t?1:s).attr("id",a).html(e?`<span style='color:${e[0]}'>${e[1]}</span>`:void 0).addClass(l).on("mouseenter",stats.networkTextEnter).on("mouseleave",stats.networkTextLeave)):o.append($("<td>").attr("rowspan","inline"===t?1:s).attr("id",a).html(e?`<span style='color:${e[0]}'>${e[1]}</span>`:void 0).addClass(l)):o.append($("<td>").attr("rowspan","inline"===t?1:s).html(e?`<span style='color:${e[0]}'>${e[1]}</span>`:void 0).addClass(l))}SharkGame.Settings.current.switchStats||o.append($("<td>").attr("rowspan",s).html(sharktext.shouldHideNumberOfThis(r)?"":"<div style='text-align:right'>"+sharktext.beautify(res.getResource(r)).bold()+"</div>").addClass(l).attr("id","table-amount-"+r)),o.append($("<td>").html(sharktext.getResourceName(r,void 0,void 0,"evenRow"===l?sharkcolor.getVariableColor("--color-dark"):sharkcolor.getVariableColor("--color-darker"))).attr("rowspan",s).addClass(l));const c={upgrade:[],world:[],aspect:[]};$.each(a,((e,t)=>{const a=SharkGame.Settings.current.switchStats?r:e,s=SharkGame.Settings.current.switchStats?e:r;c.upgrade.push(res.getMultiplierProduct("upgrade",s,a)),c.world.push(res.getMultiplierProduct("world",s,a)),c.aspect.push(res.getMultiplierProduct("aspect",s,a))})),$.each(c,((e,t)=>{c[e]=1!==t.filter(((e,t,a)=>a.indexOf(e)===t)).length})),$.each(a,((a,s)=>{const d=SharkGame.Settings.current.switchStats?r:a,m=SharkGame.Settings.current.switchStats?a:r,p=s;let g;if(!SharkGame.BreakdownIncomeTable.get(m))return t++,!1;g=SharkGame.BreakdownIncomeTable.get(m)[d];const h=g<0?"":"+";SharkGame.Settings.current.switchStats&&o.append($("<td>").html(sharktext.shouldHideNumberOfThis(m)?"":"<div style='text-align:right'>"+sharktext.beautify(res.getResource(a)).bold()+"</div>").addClass(l).attr("id","table-amount-"+m+"-"+d)),o.append($("<td>").html(sharktext.getResourceName(a,void 0,void 0,"evenRow"===l?sharkcolor.getVariableColor("--color-dark"):sharkcolor.getVariableColor("--color-darker"))).addClass(l));const u=p*res.getNetworkIncomeModifier("generator",m,p)*res.getNetworkIncomeModifier("resource",d,p)<0?"":"+";if("advanced"===SharkGame.Settings.current.grottoMode){if(i([res.INCOME_COLOR,u+sharktext.beautify(SharkGame.ResourceMap.get(m).baseIncome[d]/SharkGame.persistentFlags.dialSetting,!1,2)+"/s"],"inline","advanced-base-income-"+m+"-"+d),c.upgrade||0===n){const e=res.getMultiplierProduct("upgrade",m,d);i(1!==e?[res.UPGRADE_MULTIPLIER_COLOR,"x"+sharktext.beautify(e,!1,1)]:void 0,c.upgrade?"inline":void 0)}if(c.world||0===n){const e=res.getMultiplierProduct("world",m,d);i(1!==e?[res.WORLD_MULTIPLIER_COLOR,"x"+sharktext.beautify(e,!1,1)]:void 0,c.world?"inline":void 0)}if(c.aspect||0===n){const e=res.getMultiplierProduct("aspect",m,d);i(1!==e?[res.ASPECT_MULTIPLIER_COLOR,"x"+sharktext.beautify(e,!1,1)]:void 0,c.aspect?"inline":void 0)}const e=res.getNetworkIncomeModifier("generator",m,p)*res.getNetworkIncomeModifier("resource",d,p);1!==e?i([res.RESOURCE_AFFECT_MULTIPLIER_COLOR,"x"+sharktext.beautify(e,!1,2)],"inline","network-"+m+"-"+d):i(void 0,"inline")}else i([res.INCOME_COLOR,u+sharktext.beautify(p*res.getNetworkIncomeModifier("generator",m,p)*res.getNetworkIncomeModifier("resource",d,p)/SharkGame.persistentFlags.dialSetting,!1,2)+"/s"],"inline","base-income-"+m+"-"+d);i(void 0,"inline"),"percentage"===SharkGame.Settings.current.incomeTotalMode?i([res.TOTAL_INCOME_COLOR,sharktext.boldString(Math.min(g/SharkGame.PlayerIncomeTable.get(d)*100,100).toFixed(0)+"%")],"inline","income-"+m+"-"+d):i([res.TOTAL_INCOME_COLOR,sharktext.boldString(h+sharktext.beautifyIncome(g))],"inline","income-"+m+"-"+d),n++,e.append(o),o=$("<tr>")})),o=null,t++})),a.size&&!_.isUndefined(e[0].children[0])){const r=$("<tr>");let s=e[0].children[0].children.length;if(SharkGame.Settings.current.switchStats?(r.append($("<td>").html("<span><u>"+"RESOURCE".bold()+"</u></span>").addClass("evenRow")),r.append($("<td>").html("<span><u>"+"AMOUNT".bold()+"</u></span>").addClass("evenRow")),r.append($("<td>").html("<span><u>"+"GENERATOR".bold()+"</u></span>").addClass("evenRow"))):(r.append($("<td>").html("<span><u>"+"AMOUNT".bold()+"</u></span>").addClass("evenRow")),r.append($("<td>").html("<span><u>"+"GENERATOR".bold()+"</u></span>").addClass("evenRow")),r.append($("<td>").html("<span><u>"+"RESOURCE".bold()+"</u></span>").addClass("evenRow"))),r.append($("<td>").html("<span><u><b>"+("advanced"===SharkGame.Settings.current.grottoMode?"BASE INCOME":"INCOME PER")+"</b></u></span>").addClass("evenRow")),s-=4,"advanced"===SharkGame.Settings.current.grottoMode){function o(e,t){return e.on("mouseenter",(()=>$("#tooltipbox").html(t))).on("mouseleave",(()=>$("#tooltipbox").html("")))}r.append(o($("<td>").html("<div style='text-align:center; color:"+res.UPGRADE_MULTIPLIER_COLOR+"'><strong>U</strong></div>").addClass("evenRow"),"<strong>U</strong>pgrade effects")),main.isFirstTime()?(r.append($("<td>").html(void 0).addClass("evenRow")),r.append($("<td>").html(void 0).addClass("evenRow")),r.append($("<td>").html(void 0).addClass("evenRow"))):(r.append(o($("<td>").html("<div style='text-align:center; color:"+res.WORLD_MULTIPLIER_COLOR+"'><strong>W</strong></div>").addClass("evenRow"),"<strong>W</strong>orld effects")),r.append(o($("<td>").html("<div style='text-align:center; color:"+res.ASPECT_MULTIPLIER_COLOR+"'><strong>A</strong></div>").addClass("evenRow"),"<strong>A</strong>spect effects")),r.append(o($("<td>").html("<div style='text-align:center; color:"+res.RESOURCE_AFFECT_MULTIPLIER_COLOR+"'><strong>R</strong></div>").addClass("evenRow"),"How some <strong>R</strong>esources affect each other"))),s-=4}for(;s>1;)s-=1,r.append($("<td>").html(void 0).addClass("evenRow"));1!==res.getSpecialMultiplier()&&r.append($("<td>").html("x"+res.getSpecialMultiplier()).addClass("evenRow").attr("rowspan",e.find("tr").length+1)),r.append($("<td>").html("<span><u><b>TOTAL</b></u></span>").addClass("evenRow")),e.prepend(r),SharkGame.Stats.incomeTableEmpty=!1}else e.prepend($("<tr>").append($("<td>").html("<span><i><b>There's nothing here.</b></i></span>"))),SharkGame.Stats.incomeTableEmpty=!0;return e},createTotalAmountTable(){let e=$("#totalAmountTable");return 0===e.length?e=$("<table>").attr("id","totalAmountTable"):e.empty(),SharkGame.ResourceMap.forEach(((t,a)=>{if(res.getTotalResource(a)>0&&"hidden"!==res.getCategoryOfResource(a)){const t=$("<tr>");t.append($("<td>").html(sharktext.getResourceName(a,void 0,void 0,sharkcolor.getVariableColor("--color-darker")))),t.append($("<td>").html(sharktext.beautify(res.getTotalResource(a))).attr("id","totalAmount-"+a)),e.append(t)}})),e},toggleSwitch(){SharkGame.Settings.current.switchStats=!SharkGame.Settings.current.switchStats,SharkGame.Stats.createIncomeTable()},toggleMode(){"simple"===SharkGame.Settings.current.grottoMode?(SharkGame.Settings.current.grottoMode="advanced",document.getElementById("modeButton").innerHTML="Swap to Simple mode"):(SharkGame.Settings.current.grottoMode="simple",document.getElementById("modeButton").innerHTML="Swap to Advanced mode"),stats.createIncomeTable(),stats.updateTableKey()},updateTableKey(){"advanced"!==SharkGame.Settings.current.grottoMode||SharkGame.Stats.incomeTableEmpty?document.getElementById("tableKey").innerHTML="":"start"!==world.worldType?document.getElementById("tableKey").innerHTML=`<br> <b><u>TABLE KEY</b></u><br> <span style='color:${res.UPGRADE_MULTIPLIER_COLOR}'><b>This color</b></span> is for <strong>U</strong>pgrade effects.<br> <span style='color:${res.WORLD_MULTIPLIER_COLOR}'><b>This color</b></span> is for <strong>W</strong>orld effects.<br> <span style='color:${res.ASPECT_MULTIPLIER_COLOR}'><b>This color</b></span> is for <strong>A</strong>spect effects.<br> <span style='color:${res.RESOURCE_AFFECT_MULTIPLIER_COLOR}'><b>This color</b></span> is for how some <strong>R</strong>esources affect each other.`:document.getElementById("tableKey").innerHTML=`<br> <b><u>TABLE KEY</b></u><br> <span style='color:${res.UPGRADE_MULTIPLIER_COLOR}'><b>This color</b></span> is for upgrade effects.`},networkTextEnter(e,t="nothing"){if(!(t&&t.includes("network")||(t=$(this).attr("id"))&&t.includes("network")))return;const a=t.split("-"),r=a[1],s=a[2];let o=!1,n="";const l={};l[r]=1;const i=res.condenseNode(l,!0),c={};c[s]=1;const d=res.condenseNode(c,!0);_.some(i.genAffect,(e=>!$.isEmptyObject(e)))&&(n+=sharktext.getResourceName(r,!1,1,sharkcolor.getElementColor("tooltipbox","background-color"))+" income<br>",$.isEmptyObject(i.genAffect.increase)||(o=!0,n+="<span class='littleTooltipText'>IS INCREASED BY</span><br>",$.each(i.genAffect.increase,((e,t)=>{const a=SharkGame.Settings.current.alwaysSingularTooltip?1:res.getResource(e);n+=sharktext.boldString(sharktext.beautify(100*t*a)+"%")+" from "+sharktext.boldString(sharktext.beautify(a))+" "+sharktext.getResourceName(e,!1,a,sharkcolor.getElementColor("tooltipbox","background-color"))}))),$.isEmptyObject(i.genAffect.decrease)||(n+="<span class='littleTooltipText'>"+(o?"<br>then ":"")+"IS DECREASED BY</span><br>",o=!0,$.each(i.genAffect.decrease,((e,t)=>{const a=SharkGame.Settings.current.alwaysSingularTooltip?1:res.getResource(e);n+=sharktext.boldString(sharktext.beautify(100*-t*a)+"%")+" from "+sharktext.boldString(sharktext.beautify(a))+" "+sharktext.getResourceName(e,!1,a,sharkcolor.getElementColor("tooltipbox","background-color"))}))),$.isEmptyObject(i.genAffect.multincrease)||(n+="<span class='littleTooltipText'>"+(o?"<br>then ":"")+"IS MULTIPLICATIVELY INCREASED BY</span><br>",o=!0,$.each(i.genAffect.multincrease,((e,t)=>{const a=SharkGame.Settings.current.alwaysSingularTooltip?1:res.getResource(e);n+=sharktext.boldString(sharktext.beautify(100*(t**a-1))+"%")+" from "+sharktext.boldString(sharktext.beautify(a))+" "+sharktext.getResourceName(e,!1,a,sharkcolor.getElementColor("tooltipbox","background-color"))}))),$.isEmptyObject(i.genAffect.multdecrease)||(n+="<span class='littleTooltipText'>"+(o?"<br>then ":"")+"IS MULTIPLICATIVELY DECREASED BY</span><br>",o=!0,$.each(i.genAffect.multdecrease,((e,t)=>{const a=SharkGame.Settings.current.alwaysSingularTooltip?1:res.getResource(e);n+=sharktext.boldString(sharktext.beautify(100*(1-t**a))+"%")+" from "+sharktext.boldString(sharktext.beautify(a))+" "+sharktext.getResourceName(e,!1,a,sharkcolor.getElementColor("tooltipbox","background-color"))})))),_.some(d.resAffect,(e=>!$.isEmptyObject(e)))&&(o&&(o=!1,n+="<hr class='hrForTooltipJuxtaposition'>"),n+=sharktext.getResourceName(s,!1,1,sharkcolor.getElementColor("tooltipbox","background-color"))+" gains<br>",$.isEmptyObject(d.resAffect.increase)||(o=!0,n+="<span class='littleTooltipText'>ARE INCREASED BY</span><br>",$.each(d.resAffect.increase,((e,t)=>{const a=SharkGame.Settings.current.alwaysSingularTooltip?1:res.getResource(e);n+=sharktext.boldString(sharktext.beautify(100*t*a)+"%")+" from "+sharktext.boldString(sharktext.beautify(a))+" "+sharktext.getResourceName(e,!1,a,sharkcolor.getElementColor("tooltipbox","background-color"))}))),$.isEmptyObject(d.resAffect.decrease)||(n+="<span class='littleTooltipText'>"+(o?"<br>then ":"")+"ARE DECREASED BY</span><br>",o=!0,$.each(d.resAffect.decrease,((e,t)=>{const a=SharkGame.Settings.current.alwaysSingularTooltip?1:res.getResource(e);n+=sharktext.boldString(sharktext.beautify(100*-t*a)+"%")+" from "+sharktext.boldString(sharktext.beautify(a))+" "+sharktext.getResourceName(e,!1,a,sharkcolor.getElementColor("tooltipbox","background-color"))}))),$.isEmptyObject(d.resAffect.multincrease)||(n+="<span class='littleTooltipText'>"+(o?"<br>then ":"")+"ARE MULTIPLICATIVELY INCREASED BY</span><br>",o=!0,$.each(d.resAffect.multincrease,((e,t)=>{const a=SharkGame.Settings.current.alwaysSingularTooltip?1:res.getResource(e);n+=sharktext.boldString(sharktext.beautify(100*(t**a-1))+"%")+" from "+sharktext.boldString(sharktext.beautify(a))+" "+sharktext.getResourceName(e,!1,a,sharkcolor.getElementColor("tooltipbox","background-color"))}))),$.isEmptyObject(d.resAffect.multdecrease)||(n+="<span class='littleTooltipText'>"+(o?"<br>then ":"")+"ARE MULTIPLICATIVELY DECREASED BY</span><br>",o=!0,$.each(d.resAffect.multdecrease,((e,t)=>{const a=SharkGame.Settings.current.alwaysSingularTooltip?1:res.getResource(e);n+=sharktext.boldString(sharktext.beautify(100*(1-t**a))+"%")+" from "+sharktext.boldString(sharktext.beautify(a))+" "+sharktext.getResourceName(e,!1,a,sharkcolor.getElementColor("tooltipbox","background-color"))})))),document.getElementById("tooltipbox").innerHTML!==n.replace(/'/g,'"')&&(document.getElementById("tooltipbox").innerHTML=n),$("#tooltipbox").removeClass("forIncomeTable").attr("current",""),$("#tooltipbox").addClass("forHomeButtonOrGrotto").attr("current",t)},networkTextLeave(){document.getElementById("tooltipbox").innerHTML="",$("#tooltipbox").removeClass("forHomeButtonOrGrotto").attr("current","")}};